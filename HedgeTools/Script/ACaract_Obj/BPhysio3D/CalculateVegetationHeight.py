# ---------------------------------------------------------------------------
# CalculateVegetationHeight.py
# Created on: 2013-12-21 09:34:51.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: CalculateVegetationHeight <Emprise_identifié> <MNH> <Entité_en_sortie> <Environnement_de_travail> <Field_Map_of_Join_Features>
# Description:
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy, os
from arcpy.sa import ExtractByMask
from arcpy import env
env.overwriteOutput = True

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")

def CalculateVegetationHeight(MNH, emprise, idField, geodata, OutputFC):

    # Local variables:
    env.workspace = geodata

    # Process: Extraction par masque
    pathExtract = os.path.join(geodata, "EctractMNH")
    Extract_MNH = ExtractByMask(MNH, emprise)
    Extract_MNH.save(pathExtract)

    # Process: Raster vers points
    arcpy.RasterToPoint_conversion(Extract_MNH, "MNHPoint", "Value")

    # Process: Jointure spatiale
    # Création de l'objet fieldmappings
    fmap = arcpy.FieldMappings()

    # on ajoute les tables
    fmap.addTable("MNHPoint")
    fmap.addTable(emprise)

    # on cherche l'indice de la du grid_code et on créer un fieldmap pour chaque indice (mean,
    idexGridCode = fmap.findFieldMapIndex("grid_code")

    # On créer les fieldmap pour chaque colonne
    fieldMapGCmean = fmap.getFieldMap(idexGridCode)

    fieldMapGCmin = arcpy.FieldMap()
    fieldMapGCmin.addInputField("MNHPoint","grid_code")

    fieldMapGCmax = arcpy.FieldMap()
    fieldMapGCmax.addInputField("MNHPoint","grid_code")

    fieldMapGCmedian = arcpy.FieldMap()
    fieldMapGCmedian.addInputField("MNHPoint","grid_code")

    fieldMapGCstdv = arcpy.FieldMap()
    fieldMapGCstdv.addInputField("MNHPoint","grid_code")

    # On calcul le champ Min_height
    Minfld = fieldMapGCmin.outputField
    Minfld.name = "Min_height"
    Minfld.aliasName = "Min_height"
    fieldMapGCmin.outputField = Minfld
    fieldMapGCmin.mergeRule = "Min"
    fmap.addFieldMap(fieldMapGCmin)

    # On calcul le champ Max_Height
    Maxfld =fieldMapGCmax.outputField
    Maxfld.name = "Max_height"
    Maxfld.aliasName = "Max_height"
    fieldMapGCmax.outputField = Maxfld
    fieldMapGCmax.mergeRule = "Max"
    fmap.addFieldMap(fieldMapGCmax)

    # On calcul le champ Median_height
    MedianFld = fieldMapGCmedian.outputField
    MedianFld.name = "Med_height"
    MedianFld.aliasName = "Med_height"
    fieldMapGCmedian.outputField = MedianFld
    fieldMapGCmedian.mergeRule = "Median"
    fmap.addFieldMap(fieldMapGCmedian)

    # On calcul le champ stdv_height
    StdvFld = fieldMapGCstdv.outputField
    StdvFld.name= "Stdv_height"
    StdvFld.aliasName = "Stdv_height"
    fieldMapGCstdv.outputField=StdvFld
    fieldMapGCstdv.mergeRule="StdDev"
    fmap.addFieldMap(fieldMapGCstdv)

    # On calcul le champ Mean_height
    Meanfld = fieldMapGCmean.outputField
    Meanfld.name ="Mean_height"
    Meanfld.aliasName = "Mean_height"
    fieldMapGCmean.outputField = Meanfld
    fieldMapGCmean.mergeRule ="Mean"
    fmap.replaceFieldMap(idexGridCode, fieldMapGCmean)

    arcpy.SpatialJoin_analysis(emprise, "MNHPoint", OutputFC, "", "", fmap)

    # Process: Calculer un champ
    arcpy.AddField_management(OutputFC, "Variance_height", "DOUBLE")
    arcpy.CalculateField_management(OutputFC, "Variance_height", "[Stdv_height]*[Stdv_height]")

    # Delete Field:
    for fld in arcpy.ListFields(OutputFC):
        if fld.name not in [idField,"Min_height","Max_height","Med_height","Stdv_height","Mean_height","Join_Count","Variance_height"]:
            try:
                arcpy.DeleteField_management(OutputFC,fld.name)
            except:
                pass

    # Return outputFC
    return OutputFC

if __name__=="__main__":
    # Script arguments
    emprise = arcpy.GetParameterAsText(0)
    idField = arcpy.GetParameterAsText(1)
    MNH = arcpy.GetParameterAsText(2)
    OutputFC = arcpy.GetParameterAsText(3)
    # execute function
    geodata, name = os.path.split(OutputFC)
    CalculateVegetationHeight(MNH, emprise, idField, geodata, OutputFC)
