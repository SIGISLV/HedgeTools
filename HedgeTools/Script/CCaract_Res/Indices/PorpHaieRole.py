# ---------------------------------------------------------------------------
# LongueurTotalDensite.py
# Created on: 2013-07-25 12:30:06.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy, os

from arcpy import env
env.overwriteOutput = True

# Local variables:
axemedian = arcpy.GetParameterAsText(0)
champRole = arcpy.GetParameterAsText(1)
sitetude = arcpy.GetParameterAsText(2)
output = arcpy.GetParameterAsText(3)
gdb, nameOutput = os.path.split(output)
gdbSetude, namesitetude = os.path.split(sitetude)

# Process: Découper et identifier
ClipArc = os.path.join(gdb, "ClipARc")
arcpy.Clip_analysis(axemedian, sitetude, ClipArc, "")

# On utilise un curseur de recherche :
scur = arcpy.SearchCursor(ClipArc)

# On stock toute les valeurs dans une liste :
lRole, dLength, TotalLength = [], dict(), 0

for row in scur:
    # il faut encoder les valeurs
    Role = (row.getValue(champRole)).encode('utf8')
    # les variables qui nous permettent de savoir si l'on a une autre valeur.
    if Role not in dLength : dLength[Role]={"liste"+Role : [], "length": row.Shape_Length}
    if Role in dLength : dLength[Role]["length"] = dLength[Role]["length"] +row.Shape_Length
    TotalLength = TotalLength + row.Shape_Length
    lRole.append(Role)
    # on applique des condittions pour créer ou pas une nouvelle entrée du dictionnaire


del row, scur

# on fait une copie de la géométrie du site d'étude
arcpy.Copy_management(sitetude,output)

# on cherche les valeurs unique de la liste de valeur :
lValUnique = frozenset(lRole)

# stocke dans un dictionnaire les valeurs unique et on créer les champs :
listValeur =[]
for val in lValUnique:
    val= val.encode('utf8')
    arcpy.AddField_management(output, champRole + "_" +val, "TEXT")
    listValeur.append(val)

# on met à jour les champs:
ucur = arcpy.UpdateCursor(output)
for row in ucur :
    for Valeur in listValeur:
        pourcentage = (dLength[Valeur]["length"]*1.0/TotalLength*1.0)*100.
        row.setValue(champRole + "_" +Valeur, pourcentage)
        ucur.updateRow(row)

